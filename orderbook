#!/bin/bash
#
# Output nicely formatted orderbooks
#
# Usage: ./orderbook btc kmd
#
# @author webworker01
# @link https://developers.atomicdex.io/basic-docs/atomicdex/atomicdex-api.html#orderbook
#
scriptpath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source $scriptpath/main

if [[ -z $1 ]] || [[ -z $2 ]]; then
    echo "Usage: ./orderbook <base> <reL>"
    exit 0
fi

coin1=${1^^}
coin2=${2^^}

orderbooks=$(curl -s --url "http://127.0.0.1:7783" --data "{\"userpass\":\"$userpass\",\"method\":\"orderbook\",\"base\":\"${coin1}\",\"rel\":\"${coin2}\"}")

echo "--Bids (Selling ${coin2} for ${coin1})--"
printf "%-7s %-34s %20s %20s %20s %20s\n" "Coin" "Address" "Price ${coin2}/${coin1}" "Volume ${coin1}" "Volume ${coin2}" "Price ${coin1}/${coin2}"
printf "%-7s %-34s %20s %20s %20s %20s\n" "----" "-------" "-------------" "----------" "----------" "-------------"
bids=$(jq -rc '.bids | sort_by((.price|tonumber)) | .[] | [.coin, .address, .price, ((.maxvolume|tonumber)/(.price|tonumber)), .maxvolume, (1/(.price|tonumber))] | @tsv' <<< $orderbooks)
awk '{printf("%-6s %35s %20.8f %20.8f %20.8f %20.8f\n", $1, $2, $3, $4, $5, $6)}' <<< $bids

echo
echo "--Asks (Buying ${coin2} with ${coin1})--"
printf "%-7s %-34s %20s %20s %20s %20s\n" "Coin" "Address" "Price ${coin2}/${coin1}" "Volume ${coin1}" "Volume ${coin2}" "Price ${coin1}/${coin2}"
printf "%-7s %-34s %20s %20s %20s %20s\n" "----" "-------" "-------------" "----------" "----------" "-------------"
asks=$(jq -r '.asks | sort_by((.price|tonumber)) | .[] | [.coin, .address, .price, .maxvolume, ((.maxvolume|tonumber)*(.price|tonumber)), (1/(.price|tonumber))] | @tsv' <<< $orderbooks)
awk '{printf("%-6s %35s %20.8f %20.8f %20.8f %20.8f\n", $1, $2, $3, $4, $5, $6)}' <<< $asks
